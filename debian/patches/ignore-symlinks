Description: Patch for ignoring symlinks during searching available themes
 Prevents of possible infinite loop because of circular symlinks.
Bug-Debian: http://bugs.debian.org/678714
Author: Boris Pek <tehnick-8@mail.ru>
Last-Update: 2012-06-29

--- a/src/appearancegtk2.cpp
+++ b/src/appearancegtk2.cpp
@@ -145,11 +145,11 @@
 {
     //TODO: Port to KStandardDirs
     QDir root("/usr/share/themes");
-    QFileInfoList availableThemes = root.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs);
+    QFileInfoList availableThemes = root.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs|QDir::NoSymLinks);
 
     //Check if there are themes installed by the user
     QDir user(QDir::homePath()+"/.themes");
-    availableThemes += user.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs);
+    availableThemes += user.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs|QDir::NoSymLinks);
 
     //we just want actual themes
     QStringList paths;
--- a/src/appearancegtk3.cpp
+++ b/src/appearancegtk3.cpp
@@ -29,11 +29,11 @@
 {
     //TODO: port to kstandarddirs
     QDir root("/usr/share/themes");
-    QFileInfoList availableThemes = root.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs);
+    QFileInfoList availableThemes = root.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs|QDir::NoSymLinks);
 
     //Also show the user-installed themes
     QDir user(QDir::homePath()+"/.themes");
-    availableThemes += user.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs);
+    availableThemes += user.entryInfoList(QDir::NoDotAndDotDot|QDir::AllDirs|QDir::NoSymLinks);
 
     //we just want actual themes
     QStringList themes;
--- a/src/iconthemesmodel.cpp
+++ b/src/iconthemesmodel.cpp
@@ -54,7 +54,7 @@
 
 //  We verify if there are themes in the home folder
     QDir userIconsDir(QDir::home().filePath("/.icons"));
-    QDirIterator it(userIconsDir.path(), QDir::NoDotAndDotDot|QDir::AllDirs);
+    QDirIterator it(userIconsDir.path(), QDir::NoDotAndDotDot|QDir::AllDirs|QDir::NoSymLinks);
     while(it.hasNext()) {
         QString currentPath = it.next();
         QDir dir(currentPath);
@@ -83,7 +83,7 @@
         return f.absoluteFilePath();
     }
     
-    QStringList subdirs = directory.entryList(QDir::AllDirs|QDir::NoDotAndDotDot);
+    QStringList subdirs = directory.entryList(QDir::AllDirs|QDir::NoDotAndDotDot|QDir::NoSymLinks);
     qSort(subdirs.begin(), subdirs.end(), greatSizeIs48);
     foreach(const QString& subdir, subdirs) {
         QString ret = findFilesRecursively(wildcard, QDir(directory.filePath(subdir)));
--- a/src/thread.cpp
+++ b/src/thread.cpp
@@ -84,7 +84,7 @@
     }
 
     // Package extracted in the temp dir. Now we want to know the name
-    QString folder=temporal.entryList(QDir::AllDirs|QDir::NoDotAndDotDot).first();
+    QString folder=temporal.entryList(QDir::AllDirs|QDir::NoDotAndDotDot|QDir::NoSymLinks).first();
 
     kDebug() << "FOUND THEME FOLDER = " << folder;
     kDebug() << "\n******* THEME " << temporal.path()+'/'+folder;
@@ -176,7 +176,7 @@
     }
 
     //archive extracted in the temp directory
-    QString folder= temporal.entryList(QDir::AllDirs|QDir::NoDotAndDotDot).first();
+    QString folder= temporal.entryList(QDir::AllDirs|QDir::NoDotAndDotDot|QDir::NoSymLinks).first();
     kDebug() << "FOUND THEME FOLDER = " << folder;
     kDebug() << "\n******* THEME " << temporal.path()+'/'+folder;
 
